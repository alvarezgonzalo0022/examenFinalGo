{
    "swagger": "2.0",
    "info": {
      "description": "This is a sample server celler server.",
      "title": "Swagger Example API",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "name": "API Support",
        "url": "http://www.swagger.io/support",
        "email": "support@swagger.io"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
      "/appointment/:id": {
        "delete": {
          "description": "Delete appointment by id",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["appointment"],
          "summary": "Delete an appointment",
          "parameters": [{
            "type": "integer",
            "description": "ID of the appointment",
            "name": "id",
            "in": "path",
            "required": true
          }],
          "responses": {
            "200": {
              "description": "Appointment successfully deleted",
              "schema": { "$ref": "#/definitions/response" }
            },
            "404": {
              "description": "Appointment not found",
              "schema": { "$ref": "#/definitions/errorResponse" }
            }
          }
        },
        "patch": {
          "description": "Update appointment by id",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["appointment"],
          "summary": "Update an appointment",
          "parameters": [{
            "type": "integer",
            "description": "ID of the appointment",
            "name": "id",
            "in": "path",
            "required": true
          }],
          "responses": {
            "200": {
              "description": "Appointment successfully updated",
              "schema": { "$ref": "#/definitions/response" }
            },
            "400": {
              "description": "Invalid request format",
              "schema": { "$ref": "#/definitions/errorResponse" }
            },
            "404": {
              "description": "Appointment not found",
              "schema": { "$ref": "#/definitions/errorResponse" }
            }
          }
        }
      },
      "/appointments/{id}": {
        "get": {
          "description": "Get appointment by id",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["appointment"],
          "summary": "Retrieve an appointment",
          "parameters": [{
            "type": "integer",
            "description": "ID of the appointment",
            "name": "id",
            "in": "path",
            "required": true
          }],
          "responses": {
            "200": {
              "description": "Appointment details retrieved",
              "schema": { "$ref": "#/definitions/response" }
            },
            "404": {
              "description": "Appointment not found",
              "schema": { "$ref": "#/definitions/errorResponse" }
            }
          }
        }
      },
      "/dentists": {
        "get": {
          "description": "Get all dentists",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["odontologo"],
          "summary": "Retrieve all dentists",
          "responses": {
            "200": {
              "description": "List of dentists",
              "schema": { "$ref": "#/definitions/response" }
            }
          }
        },
        "post": {
          "description": "Create a new dentist",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["dentist"],
          "summary": "Create a dentist",
          "responses": {
            "201": {
              "description": "Dentist created successfully",
              "schema": { "$ref": "#/definitions/response" }
            },
            "400": {
              "description": "Invalid input data",
              "schema": { "$ref": "#/definitions/errorResponse" }
            }
          }
        }
      },
      "/dentists/:id": {
        "get": {
          "description": "Get dentist by id",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["dentist"],
          "summary": "Retrieve an dentist",
          "parameters": [{
            "type": "integer",
            "description": "ID of the dentist",
            "name": "id",
            "in": "path",
            "required": true
          }],
          "responses": {
            "200": {
              "description": "Dentist details retrieved",
              "schema": { "$ref": "#/definitions/response" }
            },
            "404": {
              "description": "Dentist not found",
              "schema": { "$ref": "#/definitions/errorResponse" }
            }
          }
        },
        "put": {
          "description": "Update dentist by id",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["dentist"],
          "summary": "Update an dentist",
          "parameters": [{
            "type": "integer",
            "description": "ID of the dentist",
            "name": "id",
            "in": "path",
            "required": true
          }],
          "responses": {
            "200": {
              "description": "Dentist successfully updated",
              "schema": { "$ref": "#/definitions/response" }
            },
            "400": {
              "description": "Invalid request format",
              "schema": { "$ref": "#/definitions/errorResponse" }
            },
            "404": {
              "description": "Dentist not found",
              "schema": { "$ref": "#/definitions/errorResponse" }
            }
          }
        },
        "delete": {
          "description": "Delete dentist by id",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["dentist"],
          "summary": "Delete a dentist",
          "parameters": [{
            "type": "integer",
            "description": "ID of the dentist",
            "name": "id",
            "in": "path",
            "required": true
          }],
          "responses": {
            "200": {
              "description": "Dentist successfully deleted",
              "schema": { "$ref": "#/definitions/response" }
            },
            "404": {
              "description": "Dentist not found",
              "schema": { "$ref": "#/definitions/errorResponse" }
            }
          }
        }
      },
      "/patients": {
        "get": {
          "description": "Get all patients",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["paciente"],
          "summary": "Retrieve all patients",
          "responses": {
            "200": {
              "description": "List of patients",
              "schema": { "$ref": "#/definitions/response" }
            }
          }
        },
        "post": {
          "description": "Create a new patient",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["patient"],
          "summary": "Create a patient",
          "responses": {
            "201": {
              "description": "Patient created successfully",
              "schema": { "$ref": "#/definitions/response" }
            },
            "400": {
              "description": "Invalid input data",
              "schema": { "$ref": "#/definitions/errorResponse" }
            }
          }
        }
      },
      "/pacientes/:id": {
        "get": {
          "description": "Get patient by id",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["patient"],
          "summary": "Retrieve a patient",
          "parameters": [{
            "type": "integer",
            "description": "ID of the patient",
            "name": "id",
            "in": "path",
            "required": true
          }],
          "responses": {
            "200": {
              "description": "Patient details retrieved",
              "schema": { "$ref": "#/definitions/response" }
            },
            "404": {
              "description": "Patient not found",
              "schema": { "$ref": "#/definitions/errorResponse" }
            }
          }
        },
        "put": {
          "description": "Update patient by id",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "tags": ["patient"],
          "summary": "Update a patient",
          "parameters": [{
            "type": "integer",
            "description": "ID of the patient",
            "name": "id",
            "in": "path",
            "required": true
          }],
          "responses": {
            "200": {
                "description": "Patient successfully updated",
                "schema": { "$ref": "#/definitions/response" }
              },
              "400": {
                "description": "Invalid request format",
                "schema": { "$ref": "#/definitions/errorResponse" }
              },
              "404": {
                "description": "Patient not found",
                "schema": { "$ref": "#/definitions/errorResponse" }
              }
            }
          },
          "delete": {
            "description": "Delete patient by id",
            "consumes": ["application/json"],
            "produces": ["application/json"],
            "tags": ["patient"],
            "summary": "Delete a patient",
            "parameters": [{
              "type": "integer",
              "description": "ID of the patient",
              "name": "id",
              "in": "path",
              "required": true
            }],
            "responses": {
              "200": {
                "description": "Patient successfully deleted",
                "schema": { "$ref": "#/definitions/response" }
              },
              "404": {
                "description": "Patient not found",
                "schema": { "$ref": "#/definitions/errorResponse" }
              }
            }
          }
        }
      },
      "securityDefinitions": {
        "BasicAuth": {
          "type": "basic"
        }
      },
      "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
      },
      "definitions": {
        "response": {
          "type": "object",
          "properties": {
            "data": { "type": "object" }
          }
        },
        "errorResponse": {
          "type": "object",
          "properties": {
            "code": { "type": "string" },
            "message": { "type": "string" }
          }
        }
      }
    }
    
  